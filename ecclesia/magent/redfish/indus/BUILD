licenses(["notice"])

cc_library(
    name = "indus",
    srcs = [
        "chassis.cc",
        "redfish_service.cc",
        "sleipnir_sensor.cc",
        "storage.cc",
        "storage_controller.cc",
    ],
    hdrs = [
        "chassis.h",
        "drive.h",
        "event_service.h",
        "event_service_clear.h",
        "pcie_slots.h",
        "redfish_service.h",
        "service_root.h",
        "sleipnir_sensor.h",
        "sleipnir_sensor_collection.h",
        "storage.h",
        "storage_controller.h",
    ],
    visibility = ["//ecclesia:magent_frontend_users"],
    deps = [
        "//ecclesia/lib/io/pci:discovery",
        "//ecclesia/lib/io/pci:location",
        "//ecclesia/lib/io/usb",
        "//ecclesia/lib/io/usb:ids",
        "//ecclesia/lib/logging",
        "//ecclesia/lib/types:fixed_range_int",
        "//ecclesia/magent/lib/event_logger/indus:indus_system_event_visitors",
        "//ecclesia/magent/lib/ipmi",
        "//ecclesia/magent/lib/ipmi:interface_options",
        "//ecclesia/magent/lib/ipmi:ipmitool",
        "//ecclesia/magent/lib/nvme:libnvme",
        "//ecclesia/magent/lib/nvme:smart_log_page",
        "//ecclesia/magent/redfish/common",
        "//ecclesia/magent/redfish/core:redfish_core",
        "//ecclesia/magent/sysmodel/x86:chassis",
        "//ecclesia/magent/sysmodel/x86:nvme",
        "//ecclesia/magent/sysmodel/x86:sysmodel_fru",
        "//ecclesia/magent/sysmodel/x86:x86_sysmodel",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/meta:type_traits",
        "@com_google_absl//absl/numeric:int128",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/types:optional",
        "@com_google_absl//absl/types:variant",
        "@com_google_tensorflow_serving//tensorflow_serving/util/net_http/server/public:http_server_api",
        "@com_jsoncpp//:json",
    ],
)
