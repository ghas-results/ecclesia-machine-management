syntax = "proto3";

package ecclesia;

import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";

// Encapsulates subset of redfish properties and devpath obtained from a redfish
// resource.
message SubqueryDataSet {
  message Property {
    // Named attribute to which queried property in response data is mapped.
    // By default, name of the queried property is set if the client
    // application does not explicitly provide a name to map the queried
    // property to within a subquery.
    string name = 1;
    oneof value {
      string string_value = 3;
      double double_value = 4;
      int64 int64_value = 5;
      bool boolean_value = 6;
      google.protobuf.Timestamp timestamp_value = 7;
    }
  }
  optional string devpath = 1;
  repeated Property properties = 2;
  // Maps child subquery id to its associated subquery response data.
  // An important construct to group datasets of different subqueries under
  // parent subquery.
  map<string, SubqueryOutput> child_subquery_output_by_id = 3;
}

message SubqueryOutput {
  // Describes the status of Subquery abstracting away transport specifics.
  optional google.rpc.Status status = 1;
  // Normalised data per subquery based on data model defined in the subquery
  repeated SubqueryDataSet data_sets = 2;
}

// Message encapsulating Query result
message DelliciusQueryResult {
  // Identifies the parent query the subquery data associates with.
  string query_id = 1;
  // Maps subquery id to associated subquery response data.
  map<string, SubqueryOutput> subquery_output_by_id = 2;
  // Represents point in time when Dellicius Queries are received by QueryEngine
  google.protobuf.Timestamp start_timestamp = 3;
  // Represents point in time when output for last Dellicus Query is processed.
  google.protobuf.Timestamp end_timestamp = 4;
}
