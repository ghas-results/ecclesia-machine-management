syntax = "proto3";

package ecclesia;

// Represents a EnumType declared in a Schema.
message EnumType {
  string entity_name = 1;
  repeated string values = 2;
}

// Represents a Redfish Property definition in a schema.
message Property {
  // A reference to an EntityType or EnumType within a Schema.
  message Reference {
    // Should be the value as found in Schema.schema_namespace.
    string schema_namespace = 1;
    // Should be the value as found in Schema.(resources|enums).entity_name.
    string entity_name = 2;
  }
  // Represents a Redfish ComplexType defined in a schema.
  message ComplexType {
    // The name of the ComplexType.
    string name = 1;
    repeated Property properties = 2;
  }
  // A property type.
  message Type {
    // Primitive data types defined in DSP0266 v1.14.0 ยง9.5.1, minus the
    // container types.
    enum PrimitiveType {
      BOOLEAN = 0;
      NUMBER = 1;
      STRING = 2;
    }
    oneof type {
      PrimitiveType primitive = 2;
      // Is a type defined in another schema.
      Reference reference = 3;
      // Is a collection of types defined in another schema.
      Reference collection = 4;
      // Is an object type with its own properties.
      ComplexType complex_type = 5;
    }
  }
  string name = 1;
  Type type = 2;
}

// Represents a Redfish Resource definition in a schema.
message Resource {
  string entity_name = 1;
  repeated Property properties = 2;
}

// Represents a Redfish Schema.
message Schema {
  string schema_namespace = 1;
  repeated Resource resources = 2;
  repeated EnumType enums = 3;
}

// Represents a Redfish profile and its Schema requirements.
message Profile {
  // Basic functions from DSP0272 v1.0.0 ยง9
  string profile_name = 1;
  string profile_version = 2;
  string purpose = 3;
  string contact_info = 4;
  string owning_entity = 5;
  reserved 6;
  map<string, Schema> schemas_by_namespace = 7;
}
