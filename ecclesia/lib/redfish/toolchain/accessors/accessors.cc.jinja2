#include <optional>

#include "{{header_filepath}}"

namespace ecclesia {
{% for profile in profiles -%}
{% for namespace in profile.pb.schemas_by_namespace -%}
{% for resource in profile.pb.schemas_by_namespace[namespace].resources -%}
{% for property in resource.properties %}
std::optional<{{type_to_string(property.type)}}> {{profile.sanitized_profile_name}}::{{resource.entity_name}}::{{property.name}}() {
  if (!obj_) return absl::nullopt;
{% if type_to_string(property.type) == 'RedfishVariant' %}
  return obj_->Get("{{property.name}}");
{% else %}
  return obj_->GetNodeValue<{{type_to_string(property.type)}}>("{{property.name}}");
{% endif %}
}
{% endfor %}
{%- endfor %}
{%- endfor %}
{%- endfor %}
}  // namespace ecclesia