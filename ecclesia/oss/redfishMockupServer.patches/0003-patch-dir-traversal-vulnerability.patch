diff --git a/redfishMockupServer.py b/redfishMockupServer.py
index 4d56f83..7aedb2e 100644
--- a/redfishMockupServer.py
+++ b/redfishMockupServer.py
@@ -72,6 +72,8 @@ def clean_path(path, isShort):
         path = path.replace('redfish/v1', '').strip('/')
     return path

+def is_safe_path(basedir, path):
+    return os.path.realpath(path).startswith(basedir)

 class RfMockupServer(BaseHTTPRequestHandler):
         '''
@@ -95,7 +97,7 @@ class RfMockupServer(BaseHTTPRequestHandler):
             :param path:
             """
             if path not in self.patchedLinks:
-                if os.path.isfile(path):
+                if os.path.isfile(path) and is_safe_path(self.server.mockDir, path):
                     with open(path) as f:
                         jsonData = json.load(f)
                         f.close()
@@ -312,6 +314,9 @@ class RfMockupServer(BaseHTTPRequestHandler):
             fpath_xml = self.construct_path(self.path, 'index.xml')
             fpath_headers = self.construct_path(self.path, 'headers.json')
             fpath_direct = self.construct_path(self.path, '')
+            if not is_safe_path(self.server.mockDir, fpath_direct):
+                self.send_response(404)
+                self.end_headers()

             # If bool headers is true and headers.json exists...
             # else, send normal headers for given resource
@@ -350,6 +355,9 @@ class RfMockupServer(BaseHTTPRequestHandler):
             fpath_xml = self.construct_path(self.path, 'index.xml')
             fpath_headers = self.construct_path(self.path, 'headers.json')
             fpath_direct = self.construct_path(self.path, '')
+            if not is_safe_path(self.server.mockDir, fpath_direct):
+                self.send_response(404)
+                self.end_headers()

             success, payload = self.get_cached_link(fpath)

--
2.31.1.498.g6c1eba8ee3d-goog
